name: Push

on:
  push:
    branches:
    - master
    - API*

env:
  LATEST_LEVEL: API8

jobs:
  check-api-level:
    runs-on: ubuntu-latest
    outputs:
      level: ${{ steps.get-level.outputs.level }}
    steps:
    - name: Get API Level
      id: get-level
      run: |
        getLevel() {
          if [[ $GITHUB_REF == refs/heads/master ]]; then
            echo $LATEST_LEVEL
          elif [[ $GITHUB_REF =~ ^refs/heads/(API[0-9]+)$ ]]; then
             echo ${BASH_REMATCH[1]}
          fi
        }
        echo "::set-output name=level::$(getLevel)"

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x

    - name: Build
      run: ./build.sh full

    - uses: actions/upload-artifact@v2
      with:
        name: Artifacts
        path: Artifacts/**

  update-api-db:
    needs: [check-api-level, build]
    runs-on: ubuntu-latest
    if: ${{ needs.check-api-level.outputs.level }}
    steps:
    - uses: actions/checkout@v2
      with:
        repository: TizenAPI/APITool

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x

    - uses: actions/download-artifact@v2
      with:
        name: Artifacts
        path: Artifacts

    - name: Extract API
      run: |
        dotnet run print --format=json --include-hidden -o api.json Artifacts/bin/public/

    - name: Update APIDB
      uses: TizenAPI/tizenfx-build-actions/apidb@master
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        operation: update
        category: ${{ needs.check-api-level.outputs.level }}
        path: api.json
