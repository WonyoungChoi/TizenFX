name: "Postback Pull Request"

on:
  workflow_run:
    workflows: ["Build Pull Request"]
    types:
      - completed

jobs:
  postback:
    runs-on: ubuntu-latest
    steps:

    - name: Info
      run: |
        env
        echo "${{ toJson(github.event.workflow_run) }}"

    - name: Download Artifacts from Build
      uses: TizenAPI/tizenfx-build-actions/download-workflow-artifacts@master
      with:
        token: ${{ secrets.TIZENAPI_BOT_PAT }}
        run-id: ${{ github.event.workflow_run.id }}
        name: artifact
        path: Artifacts

    - name: Find Pull Request
      id: pull_request
      uses: actions/github-script@v2
      env:
        WORKFLOW_HEAD_SHA: ${{ github.event.workflow_run.head_sha }}
      with:
        script: |
          const res = await github.pulls.list({
            owner: context.repo.owner,
            repo: context.repo.repo,
            state: 'open'
          });
          if (res.status === 200) {
            const pr = res.data.find(d => d.head.sha == process.env.WORKFLOW_HEAD_SHA);
            if (pr) {
              core.setOutput('number', pr.number);
              core.setOutput('base_ref', pr.base.ref);
            }
          }

    - name: Report Error if Failure
      if: ${{ github.event.workflow_run.conclusion == "failure" }}
      uses: actions/github-script@v2
      env:
        PR_NUMBER: ${{ steps.pull_request.outputs.number }}
      with:
        github-token: ${{ secrets.TIZENAPI_BOT_PAT }}
        script: |
          const fs = require('fs');
          const json = fs.readFileSync('Artifacts/errors.json', 'utf8');
          const errors = JSON.parse(json).join('\n');
          github.issues.createComment({
            issue_number: process.env.PR_NUMBER,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '## Build Error:\n```' + errors + '```'
          });

    - name: Get Metadata of Target Branch
      uses: TizenAPI/tizenfx-build-actions/branch-metadata@master
      id: metadata
      with:
        token: ${{ secrets.TIZENAPI_BOT_PAT }}
        ref: ${{ steps.pull_request.outputs.base_ref }}

    - name: Compare API
      uses: TizenAPI/tizenfx-build-actions/apidb@master
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      with:
        token: ${{ secrets.TIZENAPI_BOT_PAT }}
        issue-number: ${{ steps.pull_request.outputs.number }}
        operation: compare
        category: ${{ steps.metadata.outputs.api-level }}
        path: Artifacts/api.json
